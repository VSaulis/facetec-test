{"version":3,"names":["HEIGHT","Dimensions","get","height","WIDTH","width","LINKING_ERROR","Platform","select","ios","default","ComponentName","OS","UIManager","UIManagerWithMissingProp","FaceTecViewManager","getViewManagerConfig","requireNativeComponent","Error","createFragment","viewId","dispatchViewManagerCommand","Commands","create","toString","AndroidFaceTecView","show","onStateUpdate","vocalGuidanceMode","config","customization","defaultCustomization","ref","useRef","onUpdate","event","status","message","load","nativeEvent","JSON","parse","undefined","useEffect","findNodeHandle","current","PixelRatio","getPixelSizeForLayoutSize","IOSFaceTecView","showView","setShowView","useState","dimensions","position","stringify","FaceTecView","android"],"sources":["index.tsx"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\nimport {\r\n  requireNativeComponent,\r\n  UIManager as UIManagerWithMissingProp,\r\n  UIManagerStatic,\r\n  Platform,\r\n  Dimensions,\r\n  PixelRatio,\r\n  findNodeHandle,\r\n  View,\r\n} from 'react-native';\r\nimport { defaultCustomization } from './customization';\r\n\r\nconst HEIGHT = Dimensions.get('window').height;\r\nconst WIDTH = Dimensions.get('window').width;\r\nconst LINKING_ERROR =\r\n  `The package 'react-native-facetec' doesn't seem to be linked. Make sure: \\n\\n` +\r\n  Platform.select({ ios: \"- You have run 'pod install'\\n\", default: '' }) +\r\n  '- You rebuilt the app after installing the package\\n' +\r\n  '- You are not using Expo managed workflow\\n';\r\n\r\nconst ComponentName =\r\n  Platform.OS === 'ios' ? 'RNOFaceTecView' : 'FaceTecViewManager';\r\n\r\nconst UIManager = UIManagerWithMissingProp as UIManagerStatic & {\r\n  FaceTecViewManager: any;\r\n};\r\n\r\nconst FaceTecViewManager =\r\n  UIManager.getViewManagerConfig(ComponentName) != null\r\n    ? requireNativeComponent<Types.FaceTecProps>(ComponentName)\r\n    : () => {\r\n        throw new Error(LINKING_ERROR);\r\n      };\r\n\r\nconst createFragment = (viewId: number | null) =>\r\n  UIManager.dispatchViewManagerCommand(\r\n    viewId,\r\n    // we are calling the 'create' command\r\n    UIManager.FaceTecViewManager.Commands.create.toString(),\r\n    [viewId]\r\n  );\r\n\r\nconst AndroidFaceTecView = ({\r\n  show = false,\r\n  onStateUpdate,\r\n  vocalGuidanceMode,\r\n  config,\r\n  customization = defaultCustomization,\r\n}: Types.FaceTecViewProps) => {\r\n  const ref = useRef(null);\r\n\r\n  const onUpdate = (event: any) => {\r\n    const { status, message, load } =\r\n      event?.nativeEvent as Types.FaceTecStateRaw;\r\n    if (onStateUpdate && status)\r\n      onStateUpdate({\r\n        status,\r\n        message,\r\n        load: load ? JSON.parse(load) : undefined,\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (show) {\r\n      const viewId = findNodeHandle(ref.current);\r\n      createFragment(viewId);\r\n    }\r\n  }, [show]);\r\n\r\n  if (!show) return null;\r\n\r\n  return (\r\n    <FaceTecViewManager\r\n      style={{\r\n        // converts dpi to px, provide desired height\r\n        height: PixelRatio.getPixelSizeForLayoutSize(0),\r\n        // converts dpi to px, provide desired width\r\n        width: PixelRatio.getPixelSizeForLayoutSize(0),\r\n      }}\r\n      vocalGuidanceMode={vocalGuidanceMode}\r\n      customization={customization}\r\n      onUpdate={onUpdate}\r\n      {...config}\r\n      ref={ref}\r\n    />\r\n  );\r\n};\r\n\r\nconst IOSFaceTecView = ({\r\n  config,\r\n  onStateUpdate,\r\n  show,\r\n  vocalGuidanceMode,\r\n  customization = defaultCustomization,\r\n}: Types.FaceTecViewProps) => {\r\n  const [showView, setShowView] = useState(false);\r\n\r\n  const dimensions = showView ? { height: HEIGHT, width: WIDTH } : {};\r\n\r\n  const onUpdate = (event: any) => {\r\n    const { status, message, load } =\r\n      event?.nativeEvent as Types.FaceTecStateRaw;\r\n\r\n    if (status === 'Ready') {\r\n      setShowView(true);\r\n    } else if (\r\n      status === 'Cancelled' ||\r\n      status === 'Failed' ||\r\n      status === 'Succeeded'\r\n    ) {\r\n      setShowView(false);\r\n    }\r\n\r\n    if (onStateUpdate && status)\r\n      onStateUpdate({\r\n        status,\r\n        message,\r\n        load: load ? JSON.parse(load) : undefined,\r\n      });\r\n  };\r\n\r\n  if (!show) return null;\r\n\r\n  return (\r\n    <View style={[{ position: 'absolute' }, dimensions]}>\r\n      <FaceTecViewManager\r\n        style={dimensions}\r\n        vocalGuidanceMode={vocalGuidanceMode ?? 'off'}\r\n        onUpdate={onUpdate}\r\n        customization={JSON.stringify(customization)}\r\n        {...config}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst FaceTecView = Platform.select({\r\n  ios: IOSFaceTecView,\r\n  android: AndroidFaceTecView,\r\n  default: () => null,\r\n});\r\ntype FaceTecViewProps = Types.FaceTecViewProps;\r\ntype FaceTecConfig = Types.FaceTecConfig;\r\ntype FaceTecStatus = Types.FaceTecStatus;\r\ntype FaceTecState = Types.FaceTecState;\r\ntype FaceTecLoad = Types.FaceTecLoad;\r\n\r\nexport {\r\n  defaultCustomization,\r\n  FaceTecView,\r\n  FaceTecViewProps,\r\n  FaceTecConfig,\r\n  FaceTecStatus,\r\n  FaceTecState,\r\n  FaceTecLoad,\r\n};\r\n"],"mappings":"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"}